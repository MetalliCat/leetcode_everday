```python
class Solution:
    def mincostTickets(self, days: List[int], costs: List[int]) -> int:
        dp = [0] * (days[-1] + 1)  # dp备忘录记录每天的总价
        for i in days: dp[i] = -1
        for i in range(1, len(dp)):
            if dp[i] != -1:
                # 非出行日 总价与前一天总价相同
                dp[i] = dp[i-1]
            else:
                # 递推关系 截至本次出行的总价取1、7、30天前的总价加上票价中的最小值
                dp[i] = min(dp[i-1] + costs[0], dp[max(0, i-7)] + costs[1] , dp[max(0,i-30)] + costs[2])
        return dp[-1]
    
```

